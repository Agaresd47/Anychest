Combined API Documentation
==============================

Table of Contents
------------------
- image_trans
- noise_trans
- geometric_trans
- blur_sharpen_trans
- intensity_trans
- advanced_image_adjustments
- image_combine

image_trans
-----------
Python Library Documentation: module image_trans

NAME
    image_trans

FUNCTIONS
    apply_transformations(drr: numpy.ndarray, mask: numpy.ndarray, transform_plan: dict) -> tuple
        Applies a series of transformations to the DRR image and mask in a specified order.


    combine_images(soft_tissue: numpy.ndarray, rib: numpy.ndarray, spine: numpy.ndarray, other_bone: numpy.ndarray, combine_plan: dict) -> numpy.ndarray
        Combines the four images into a single image using the specified plan.


    load_image(image_path: str) -> numpy.ndarray
        Loads an image as a grayscale (L mode) NumPy array.


    load_image_nifti(image_path: str) -> numpy.ndarray
        # Load NIfTI image

    post_processing(drr: numpy.ndarray, mask: numpy.ndarray) -> tuple
        Empty shell for post-processing the transformed image and mask.


    saving(image: numpy.ndarray, save_path: str) -> None
        Saves the given image to the specified path.


    saving_nifti(image: numpy.ndarray, save_path: str)
        # Save NIfTI image

FILE
    /home/bruce/code/Anychest/image/image_trans.py



noise_trans
-----------
Python Library Documentation: module noise_trans

NAME
    noise_trans

FUNCTIONS
    add_gaussian_noise(drr: numpy.ndarray, mask: numpy.ndarray, mean: float, std_dev: float) -> tuple
        Adds Gaussian noise to the DRR image.


    add_poisson_noise(drr: numpy.ndarray, mask: numpy.ndarray) -> tuple
            Adds Poisson noise to the DRR image.

        -

    add_rician_noise(drr: numpy.ndarray, mask: numpy.ndarray, sigma: float) -> tuple
        Adds Rician noise to the DRR image.


    add_speckle_noise(drr: numpy.ndarray, mask: numpy.ndarray, variance: float) -> tuple
        Adds Speckle noise to the DRR image.


FILE
    /home/bruce/code/Anychest/image/noise_trans.py



geometric_trans
---------------
Python Library Documentation: module geometric_trans

NAME
    geometric_trans

FUNCTIONS
    axis_aligned_flip(drr: numpy.ndarray, mask: numpy.ndarray, direction: str) -> tuple
        Flips the DRR image and mask along the specified axis.


    perspective_transform(drr: numpy.ndarray, mask: numpy.ndarray, points: list) -> tuple
        Applies a perspective transformation to the DRR image and mask.


    random_occlusions(drr: numpy.ndarray, mask: numpy.ndarray, num_occlusions: int, size: tuple)
        Apply random occlusions to the DRR image. Each occlusion gets a unique ID (0 to num_occlusions-1).
        The mask remains unchanged.


    rotate_image(drr: numpy.ndarray, mask: numpy.ndarray, angle: float) -> tuple
        Rotates the DRR image and mask by a specified angle.


    spatial_cropping(drr: numpy.ndarray, mask: numpy.ndarray, crop_size: tuple) -> tuple
        Crops the DRR image and mask to a specified size.


    zoom_and_crop(drr: numpy.ndarray, mask: numpy.ndarray, scale: float) -> tuple
        Applies a zoom effect followed by cropping to the DRR image and mask.


FILE
    /home/bruce/code/Anychest/image/geometric_trans.py



blur_sharpen_trans
------------------
Python Library Documentation: module blur_sharpen_trans

NAME
    blur_sharpen_trans

FUNCTIONS
    gaussian_blur(drr: numpy.ndarray, mask: numpy.ndarray, sigma: float) -> tuple
        Applies Gaussian blur to the DRR image.


    gaussian_sharpening(drr: numpy.ndarray, mask: numpy.ndarray, amount: float) -> tuple
        Enhances edge details in the DRR image using Gaussian sharpening.


FILE
    /home/bruce/code/Anychest/image/blur_sharpen_trans.py



intensity_trans
---------------
Python Library Documentation: module intensity_trans

NAME
    intensity_trans

FUNCTIONS
    adjust_brightness(drr: numpy.ndarray, mask: numpy.ndarray, beta: float) -> tuple
        Adjusts the brightness of the DRR image.


    adjust_contrast(drr: numpy.ndarray, mask: numpy.ndarray, alpha: float) -> tuple
        Adjusts the contrast of the DRR image.

    adjust_contrast_with_curve(drr: numpy.ndarray, mask: numpy.ndarray, control_points: list) -> tuple
        Adjusts the contrast of a DRR image based on intensity mapping defined by control points.

    apply_gamma_adjustment(drr: numpy.ndarray, mask: numpy.ndarray, gamma: float) -> tuple
        Adjusts the gamma of the DRR image.


FILE
    /home/bruce/code/Anychest/image/intensity_trans.py



advanced_image_adjustments
--------------------------
Python Library Documentation: module advanced_image_adjustments

NAME
    advanced_image_adjustments

FUNCTIONS
    bias_field_simulation(drr: numpy.ndarray, mask: numpy.ndarray, max_bias: float) -> tuple
        Simulates a bias field (brightness gradient) on the DRR image.
 

    boundary_smoothing(drr: numpy.ndarray, mask: numpy.ndarray, kernel_size: int) -> tuple
        Smooths the boundaries in the DRR image using a Gaussian blur.


    histogram_equalization(drr: numpy.ndarray, mask: numpy.ndarray) -> tuple
        Applies histogram equalization to the DRR image.


FILE
    /home/bruce/code/Anychest/image/advanced_image_adjustments.py



image_combine
-------------
Python Library Documentation: module image_combine

NAME
    image_combine

CLASSES
    builtins.object
        ImageCombiner

    class ImageCombiner(builtins.object)
     |  A class containing methods for combining soft tissue, rib, spine, and other bone images.
     |
     |  Static methods defined here:
     |
     |  max_overlay(soft_tissue: numpy.ndarray, rib: numpy.ndarray, spine: numpy.ndarray, other_bone: numpy.ndarray) -> numpy.ndarray
     |      Combines the images using max overlay (maximum intensity per pixel).

     |
     |  mean_blend(soft_tissue: numpy.ndarray, rib: numpy.ndarray, spine: numpy.ndarray, other_bone: numpy.ndarray) -> numpy.ndarray
     |      Combines the images by averaging their pixel values.

     |
     |  weighted_addition(soft_tissue: numpy.ndarray, rib: numpy.ndarray, spine: numpy.ndarray, other_bone: numpy.ndarray, weights: list) -> numpy.ndarray
     |      Combines the images using weighted addition.

     |
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |
     |  __dict__
     |      dictionary for instance variables
     |
     |  __weakref__
     |      list of weak references to the object

FILE
    /home/bruce/code/Anychest/image/image_combine.py



